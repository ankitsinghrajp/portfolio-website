[
   {
  "id": 20,
  "imageUrl": "/projects/talksphere.jpg",
  "title": "TalkSphere - The Chat App",
  "tagline": "Real-time conversations. Smarter connections.",
  "description": "Real-time full-stack chat app with messaging, groups, media sharing, and friend requests — built for speed and scalability.",
  "deployedLink": "https://chat-app-client-orpin-delta.vercel.app/",
  "GithubRepo": "https://github.com/ankitsinghrajp/talksphere",
  "frontend": ["React", "Redux Toolkit", "RTK Query", "Tailwind CSS", "ShadCN UI"],
  "backend": ["Node.js", "Express.js", "Socket.io", "Multer"],
  "database": ["MongoDB"],
  "orm": ["Prisma"],
  "tools": ["Git", "GitHub", "Postman", "Docker", "Render", "Cloudinary"],
  "deployment": ["Vercel (Frontend)", "Render (Backend)"],
  "what": [
    { "title": "What the project is?" },
    {
      "description": "TalkSphere is a full-stack, production-grade chat application that enables real-time conversations with file sharing, group management, and friend request systems. It leverages WebSockets for instant updates, role-based access for group control, and efficient backend design for performance and scalability."
    }
  ],
  "reflection": {
    "title": "What I Learned / Challenges",
    "description": "Built expertise in implementing bi-directional communication with Socket.io, managing large-scale state with Redux Toolkit, and optimizing MongoDB queries for real-time performance. Learned to design scalable backend architecture and handle complex group features like member addition/removal and admin control without breaking synchronization."
  },
  "why": [
    { "title": "Why I built this?" },
    {
      "description": "I developed TalkSphere to master real-time application architecture, WebSocket communication, and system design for chat-based platforms. It allowed me to explore efficient data flow, event-driven updates, and how production apps handle concurrency and scalability at scale."
    }
  ],
  "problem": [
    { "title": "What problem it solves?" },
    {
      "description": "TalkSphere simplifies modern communication by offering real-time one-on-one and group chat functionalities, complete with media sharing, role management, and instant notifications. It eliminates delays and synchronization issues common in traditional chat systems, providing a fast, interactive user experience."
    }
  ],
  "features": [
    "User authentication with JWT and secure sessions",
    "Real-time messaging using Socket.io",
    "Group creation, editing, and deletion with admin privileges",
    "Add or remove group members dynamically",
    "Send and receive images, videos, documents, and audio files",
    "Friend request system with accept/reject workflow",
    "Real-time dashboard with active users and message stats",
    "Cloud storage integration via Cloudinary",
    "Optimized backend using Prisma ORM and MongoDB",
    "Responsive UI with Tailwind CSS and ShadCN components",
    "Fully deployed on Render (backend) and Vercel (frontend)"
  ],
  "screenshots": [
    "/talksphere/1.png",
    "/talksphere/2.png",
    "/talksphere/3.png",
    "/talksphere/4.png",
    "/talksphere/5.png",
    "/talksphere/6.png",
    "/talksphere/7.png",
    "/talksphere/8.png",
    "/talksphere/9.png",
    "/talksphere/10.png",
    "/talksphere/11.png",
    "/talksphere/12.png",
    "/talksphere/13.png",
    "/talksphere/14.png",
    "/talksphere/15.png",
    "/talksphere/16.png",
    "/talksphere/17.png",
    "/talksphere/18.png",
    "/talksphere/19.png",
    "/talksphere/20.png",
    "/talksphere/21.png"
  ]
},
{
  "id": 2,
  "imageUrl": "/projects/arogya.jpg",
  "title": "Arogya - Doctor Appointment",
  "tagline": "Consult doctors online, anytime.",
  "description": "Arogya is a telemedicine app for booking appointments and consulting doctors via secure video calls, with role-based access.",
  "deployedLink": "https://arogya-doctors-appointment.vercel.app/",
  "GithubRepo": "https://github.com/ankitsinghrajp/arogya",
  "frontend": ["Next.js", "Tailwind CSS", "React"],
  "backend": ["Node.js", "Next.js API Routes"],
  "database": ["PostgreSQL (Neon)"],
  "orm": ["Prisma"],
  "tools": ["Git", "GitHub", "Postman", "OpenTok (for video calls)"],
  "deployment": ["Vercel"],
  "what": [
    { "title": "What the project is?" },
    {
      "description": "Arogya is a doctor consultation app with appointment booking, video calls, and role-based access for admins, doctors, and patients."
    }
  ],
  "why": [
    { "title": "Why I built this?" },
    {
      "description": "To create a remote healthcare platform that’s easy to use, scalable, and improves doctor-patient access across regions."
    }
  ],
  "problem": [
    { "title": "What problem it solves?" },
    {
      "description": "It makes healthcare accessible from anywhere, saving time and effort for both doctors and patients."
    }
  ],
  "reflection": {
    "title": "What I Learned / Challenges",
    "description": "Learned video API integration, secure auth, credit systems, and building responsive, role-based platforms."
  },
  "features": [
    "Role-based access (Admin, Doctor, Patient)",
    "Video consultation via WebRTC (OpenTok)",
    "Freemium model with credit usage",
    "Doctor scheduling",
    "Patient appointment booking",
    "Admin dashboard",
    "Email/in-app notifications",
    "JWT authentication",
    "Health history tracking",
    "Responsive mobile-friendly UI"
  ],
  "screenshots": [
    "/arogya/1.png",
    "/arogya/2.png",
    "/arogya/3.png",
    "/arogya/4.png",
    "/arogya/5.png",
    "/arogya/6.png",
    "/arogya/7.png",
    "/arogya/8.png"
  ],
  "roles": {
    "admin": ["Manage users", "View analytics", "Handle plans"],
    "doctor": ["Set availability", "Consult via video", "View patient history"],
    "patient": ["Book appointments", "Join calls", "View consultation records"]
  },
  "freemiumModel": {
    "freeCredits": 2,
    "plans": [
      {
        "name": "Basic Plan",
        "price": "₹199/month",
        "credits": 5,
        "features": ["5 consultations", "Priority booking"]
      },
      {
        "name": "Pro Plan",
        "price": "₹499/month",
        "credits": 15,
        "features": ["15 consultations", "Extended access", "Support"]
      }
    ]
  }
},

  {
    "id": 3,
    "imageUrl": "/projects/elevateai.jpg",
    "title": "Elevate AI",
    "tagline": "Your AI-powered career coach for job success.",
    "description": "AI-driven career coach offering real-time industry insights, skill quizzes, and tailored resumes and cover letters to boost job readiness.",
    "deployedLink": "https://elevate-ai-iota.vercel.app",
    "GithubRepo": "https://github.com/ankitsinghrajp/elevate-ai",
    "frontend": ["React", "Tailwind CSS", "Next.js"],
    "backend": ["Node.js", "Next.js API Routes"],
    "database": ["Neon (PostgreSQL)"],
    "orm": ["Prisma"],
    "tools": ["Git", "Github", "Postman"],
    "deployment": ["Vercel"],
    "what": [
      { "title": "What the project is?" },
      {
        "description": "Elevate AI is a smart career assistant that analyzes user skills, interests, and goals to generate personalized guidance. It offers AI-generated resumes, industry trend analysis, and interactive skill assessments to improve job readiness."
      }
    ],
    "why": [
      { "title": "Why I built this?" },
      {
        "description": "I created Elevate AI to solve the problem of unclear career paths for students and job seekers. I wanted to build a tool that could act like a mentor, using AI to deliver real-time, personalized career growth advice."
      }
    ],
    "problem": [
      { "title": "What problem it solves?" },
      {
        "description": "Elevate AI helps users identify gaps in their skills and prepares them for the job market with customized resume building and industry analysis. It eliminates the need for expensive coaching or generic career advice platforms."
      }
    ],
    "reflection": {
  "title": "What I Learned / Challenges",
  "description": "Learned how to integrate AI APIs for resume and cover letter generation. Deepened understanding of dynamic form generation and stateful components. Faced challenges in generating clean, professional PDF outputs and aligning AI-generated content with user input consistently."
},
    "features": [
      "AI Resume Builder",
      "AI-powered cover letter generator",
      "Skill gap analysis",
      "Tailored career suggestions",
      "Industry trends dashboard",
      "Interactive skill assessments",
      "User authentication and secure profiles",
      "Job role matching based on skills",
      "Responsive and modern UI",
      "Quiz-based learning modules"
    ],
    "screenshots": [
      "/elevateai/1.png",
      "/elevateai/2.png",
      "/elevateai/3.png",
      "/elevateai/4.png",
      "/elevateai/5.png",
      "/elevateai/6.png",
      "/elevateai/7.png",
      "/elevateai/8.png",
      "/elevateai/9.png",
      "/elevateai/10.png",
      "/elevateai/11.png",
      "/elevateai/12.png",
      "/elevateai/13.png",
      "/elevateai/14.png",
      "/elevateai/15.png",
      "/elevateai/16.png",
      "/elevateai/17.png",
      "/elevateai/18.png",
      "/elevateai/19.png",
      "/elevateai/20.png",
      "/elevateai/21.png",
      "/elevateai/22.png",
      "/elevateai/23.png",
      "/elevateai/24.png",
      "/elevateai/25.png",
      "/elevateai/26.png",
      "/elevateai/27.png",
      "/elevateai/28.png",
      "/elevateai/29.png",
      "/elevateai/30.png"
    ]
  }
]
